1. In Strategy pattern, a class behavior or its algorithm can be changed at run time.

2. This type of design pattern comes under behavior pattern.

3. In Strategy pattern, we create objects which represent various strategies  and a context object whose behavior varies as per its strategy object.

4. The strategy object changes the executing algorithm of the context object.

5. Define a family of algorithms, encapsulate each one and make them interchangeable.

6. The Strategy Pattern lets the algorithm vary independently from clients that use it.

7. Example: Sorting in which a program uses different algorithms based on the size of input. If input is small then it uses InsertionSort and if input size is large and sequence is almost sorted i.e. quicksort goes to its worst case time complexity then merge sort or heapsort is used.
